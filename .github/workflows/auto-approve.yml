name: Dependabot Auto Approve And Merge PRs

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: read

jobs:
  dependabot:
    name: Auto approve
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Fetch merge types
        id: merge-types
        env:
          MERGE_TYPES: ${{ secrets.MERGE_TYPES }}
        run: |
          arr=(${MERGE_TYPES//;/ })
          count=${#arr[@]}
          echo "Types: ${arr[*]}"
          echo "Count: ${count}"
          echo "types=${arr[*]}" >> $GITHUB_OUTPUT
          echo "count=${count}" >> $GITHUB_OUTPUT

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Approve a PR if not already approved
        id: auto-approve
        run: |
          gh pr checkout "$PR_URL"
          if [ "$(gh pr status --json reviewDecision -q .currentBranch.reviewDecision)" != "APPROVED" ];
          then
            gh pr edit "$PR_URL" --add-label "auto-approved"
            gh pr review --approve "$PR_URL"
            echo "STATUS=true" >> $GITHUB_OUTPUT
          else
            echo "PR already approved."
            echo "STATUS=false" >> $GITHUB_OUTPUT
          fi
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge a PR if okey to merge
        id: auto-merge
        if: ${{ fromJson(steps.merge-types.outputs.count) > 0 && contains(steps.merge-types.outputs.types, steps.metadata.outputs.update-type) }}
        run: |
          gh pr edit "$PR_URL" --add-label "auto-merged" || true
          gh pr merge  "$PR_URL" --auto --delete-branch -m "Auto-merged by GitHub Actions"
          echo "STATUS=true" >> $GITHUB_OUTPUT
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Write summary
        run: |
          result="skip. :x:"
          if [ "${STATUS_APPROVE}" == "true" ]; then
              result=" auto-approve! :white_check_mark:"
          fi
          if [ "${STATUS_MERGE}" == "true" ]; then
              result=" auto-merge! :white_check_mark:"
          fi
          echo "### Done with ${result}" >> $GITHUB_STEP_SUMMARY
        env:
          STATUS_APPROVE: ${{ steps.auto-approve.outputs.STATUS }}
          STATUS_MERGE: ${{ steps.auto-merge.outputs.STATUS }}
