# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install depencencies
        run: yarn install

      - name: Generate coverage report
        id: coverage
        run: |
          yarn test:coverage
          echo "STATUS=true" >> $GITHUB_OUTPUT
    outputs:
      status: ${{ steps.coverage.outputs.STATUS }}

  # Single deploy job since we're just deploying
  deploy:
    needs: build
    if: needs.build.outputs.status == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://${github_token}@github.com/${repository}
          yarn deploy
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
